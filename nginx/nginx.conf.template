# ---- define upgrade/close for websocket (used in proxy headers) ----
map $http_upgrade $upgrade_connection {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  server_tokens off;

  root /usr/share/nginx/html;
  index index.html;

  # ----------------------
  # Security headers
  # ----------------------
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

  # COOP/COEP/CORP
  add_header Cross-Origin-Opener-Policy "same-origin" always;
  add_header Cross-Origin-Embedder-Policy "require-corp" always;
  add_header Cross-Origin-Resource-Policy "cross-origin" always;

  # ----------------------
  # Content Security Policy
  # - ถ้ายังโหลดสื่อจาก CDN/R2 ตรง ให้ตั้ง PUBLIC_MEDIA_BASE_URL เป็นโดเมนนั้น
  # - ถ้าทุกอย่างวิ่งผ่าน /api/ ก็พอด้วย 'self'
  # ----------------------
  add_header Content-Security-Policy
    "default-src 'self' data: blob:;
     script-src 'self';
     style-src 'self';
     img-src 'self' data: blob: ${PUBLIC_MEDIA_BASE_URL};
     media-src 'self' data: blob: ${PUBLIC_MEDIA_BASE_URL};
     font-src 'self' data:;
     connect-src 'self';
     worker-src 'self' blob:;
    " always;

  # ----------------------
  # Gzip compression
  # ----------------------
  gzip on;
  gzip_types text/plain text/css application/json application/javascript application/xml image/svg+xml font/woff2;
  gzip_min_length 256;

  # ----------------------
  # Health (for Render healthcheck)
  # ----------------------
  location = /health {
    add_header Content-Type text/plain;
    return 200 "OK";
  }

  # ----------------------
  # Proxy API calls → backend
  # - ตั้ง ENV: API_BASE (เช่น https://your-backend.onrender.com)
  # - ^~ เพื่อชนะ regex สาย static ข้างล่าง
  # ----------------------
  location ^~ /api/ {
    proxy_pass ${API_BASE}/api/;

    proxy_http_version 1.1;

    # ใช้ host ของ upstream + เปิด SNI (สำคัญสำหรับ Render routing/TLS)
    proxy_set_header Host              $proxy_host;
    proxy_ssl_server_name              on;

    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    # WebSocket
    proxy_set_header Upgrade    $http_upgrade;
    proxy_set_header Connection $upgrade_connection;

    proxy_connect_timeout 15s;
    proxy_send_timeout    60s;
    proxy_read_timeout    60s;

    # ป้องกัน cache ผิดพลาดระหว่าง debug
    add_header Cache-Control "no-store";
  }

  # ----------------------
  # Long-lived static assets (fingerprinted หรือไฟล์คงที่)
  # ----------------------
  location ~* \.(?:ico|gif|jpe?g|png|webp|svg|css|js|woff2?|eot|ttf|map)$ {
    access_log off;
    expires 30d;
    add_header Cache-Control "public, max-age=2592000, immutable";
    try_files $uri =404;
  }

  # ----------------------
  # index.html: no-store เพื่ออัปเดต SPA ได้ไว
  # ----------------------
  location = /index.html {
    add_header Cache-Control "no-store";
    try_files $uri =404;
  }

  # ----------------------
  # Serve frontend SPA (history fallback)
  # ----------------------
  location / {
    try_files $uri /index.html;
  }
}
