services:
  db:
    image: postgres:15
    container_name: dedilute_db
    restart: always
    env_file:
      - .env.${ENVIRONMENT}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Init schema.sql (executed on first container start)
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: dedilute_backend
    restart: always
    env_file:
      - .env.${ENVIRONMENT}
    ports:
      - "${BACKEND_PORT}:3000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    image: nginx:alpine
    container_name: dedilute_frontend
    restart: always
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:
